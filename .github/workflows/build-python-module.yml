name: Mosaicsoft Python Module Build
run-name: ${{ github.actor }} is building ${{ github.repository }} üöÄ
on:
  workflow_call:
    inputs:
      module-name:
        type: string
        required: true
jobs:
  build:
    runs-on: atlas
    container: python:3.12-alpine
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build
        run: |
          ls
          apk add git
          pip install pipenv
          pipenv install -d
          pipenv run flake8
          pipenv run mypy
          pipenv run black .
          pipenv run isort .
          pipenv run pytest --cov
          if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            echo "$GITHUB_REF_NAME"
            sed -i "1s/.*/__version__ = \"$GITHUB_REF_NAME\"/" "./${{inputs.module-name}}/__init__.py"
          fi
          pipenv run flit build
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: dist/*.whl
      - run: echo "üçè This job's status is ${{ job.status }}."

  pypi-publish:
    name: upload release to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: atlas
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: pypi
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    steps:
      # retrieve your distributions here
      - uses: actions/download-artifact@v4
      - run: ls dist
      # - name: Publish package distributions to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository-url: https://test.pypi.org/legacy/